(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{10:function(e,t,r){e.exports=r(16)},16:function(e,t,r){"use strict";r.r(t);var n=r(0),a=r.n(n),o=r(7),i=r.n(o),c=r(1),l=r(2),u=r(4),s=r(3),v=r(5);function E(e,t,r){var n=e.createShader(t);if(e.shaderSource(n,r),e.compileShader(n),e.getShaderParameter(n,e.COMPILE_STATUS))return n;console.log(e.getShaderInfoLog(n)),e.deleteShader(n)}var d=r(8),_=r.n(d),T=r(9),f=r.n(T);function R(e){var t=new Image;t.src="/learn-webgl/build/leaves.jpg",t.onload=function(){!function(e,t){console.log(Object({NODE_ENV:"production",PUBLIC_URL:"/learn-webgl/build"}));var r=e.getContext("webgl"),n=E(r,r.VERTEX_SHADER,_.a),a=E(r,r.FRAGMENT_SHADER,f.a),o=function(e,t,r){var n=e.createProgram();if(e.attachShader(n,t),e.attachShader(n,r),e.linkProgram(n),e.getProgramParameter(n,e.LINK_STATUS))return n;console.log(e.getProgramInfoLog(n)),e.deleteProgram(n)}(r,n,a);r.useProgram(o);var i=r.getAttribLocation(o,"a_position"),c=r.getAttribLocation(o,"a_texCoord"),l=r.createBuffer();r.bindBuffer(r.ARRAY_BUFFER,l),function(e,t,r,n,a){var o=t,i=t+n,c=r,l=r+a;e.bufferData(e.ARRAY_BUFFER,new Float32Array([o,c,i,c,o,l,o,l,i,c,i,l]),e.STATIC_DRAW)}(r,0,0,t.width,t.height);var u=r.createBuffer();r.bindBuffer(r.ARRAY_BUFFER,u),r.bufferData(r.ARRAY_BUFFER,new Float32Array([0,0,1,0,0,1,0,1,1,0,1,1]),r.STATIC_DRAW);var s=r.createTexture();r.bindTexture(r.TEXTURE_2D,s),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_WRAP_S,r.CLAMP_TO_EDGE),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_WRAP_T,r.CLAMP_TO_EDGE),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_MIN_FILTER,r.NEAREST),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_MAG_FILTER,r.NEAREST),r.texImage2D(r.TEXTURE_2D,0,r.RGBA,r.RGBA,r.UNSIGNED_BYTE,t);var v=r.getUniformLocation(o,"u_resolution");r.viewport(0,0,r.canvas.width,r.canvas.height),r.clearColor(0,0,0,0),r.clear(r.COLOR_BUFFER_BIT),r.useProgram(o),r.enableVertexAttribArray(i),r.bindBuffer(r.ARRAY_BUFFER,l);var d=r.FLOAT;r.vertexAttribPointer(i,2,d,!1,0,0),r.enableVertexAttribArray(c),r.bindBuffer(r.ARRAY_BUFFER,u),r.vertexAttribPointer(c,2,d,!1,0,0),r.uniform2f(v,r.canvas.width,r.canvas.height);var T=r.TRIANGLES;r.drawArrays(T,0,6)}(e,t)}}var m=function(e){function t(){return Object(c.a)(this,t),Object(u.a)(this,Object(s.a)(t).apply(this,arguments))}return Object(v.a)(t,e),Object(l.a)(t,[{key:"render",value:function(){return a.a.createElement("div",null,a.a.createElement(g,{initcanvas:R}))}}]),t}(n.Component),g=function(e){function t(){return Object(c.a)(this,t),Object(u.a)(this,Object(s.a)(t).apply(this,arguments))}return Object(v.a)(t,e),Object(l.a)(t,[{key:"render",value:function(){var e=this.props.initcanvas;return a.a.createElement("div",null,a.a.createElement("canvas",{style:{border:"1px solid"},ref:function(t){t&&e(t)},id:"canvas-ex",width:"400",height:"400"},"canvas"))}}]),t}(n.Component);Boolean("localhost"===window.location.hostname||"[::1]"===window.location.hostname||window.location.hostname.match(/^127(?:\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));i.a.render(a.a.createElement(m,null),document.getElementById("root")),"serviceWorker"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})},8:function(e,t){e.exports="attribute vec2 a_position;\nattribute vec2 a_texCoord;\n\nuniform vec2 u_resolution;\n\nvarying vec2 v_texCoord;\n\nvoid main() {\n   // convert the rectangle from pixels to 0.0 to 1.0\n   vec2 zeroToOne = a_position / u_resolution;\n\n   // convert from 0->1 to 0->2\n   vec2 zeroToTwo = zeroToOne * 2.0;\n\n   // convert from 0->2 to -1->+1 (clipspace)\n   vec2 clipSpace = zeroToTwo - 1.0;\n\n   gl_Position = vec4(clipSpace * vec2(1, -1), 0, 1);\n\n   // pass the texCoord to the fragment shader\n   // The GPU will interpolate this value between points.\n   v_texCoord = a_texCoord;\n}\n"},9:function(e,t){e.exports="precision mediump float;\n// \u7eb9\u7406\nuniform sampler2D u_image;\n \n// \u4ece\u9876\u70b9\u7740\u8272\u5668\u4f20\u5165\u7684\u7eb9\u7406\u5750\u6807\nvarying vec2 v_texCoord;\n \nvoid main() {\n   // \u5728\u7eb9\u7406\u4e0a\u5bfb\u627e\u5bf9\u5e94\u989c\u8272\u503c\n   gl_FragColor = texture2D(u_image, v_texCoord);\n}"}},[[10,1,2]]]);
//# sourceMappingURL=main.fc80bbcb.chunk.js.map