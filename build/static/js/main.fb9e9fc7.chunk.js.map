{"version":3,"sources":["gl/c2/vertex.glsl","gl/c2/fragment.glsl","gl/common.js","gl/c2/index.js","gl/App.js","three/demo2.js","three/index.jsx","routes.jsx","serviceWorker.js","index.js"],"names":["module","exports","createShader","gl","type","source","shader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","console","log","getShaderInfoLog","deleteShader","KERNELS","edgeDetectKernel","guassianBlur","normal","c","canvas","image","Image","src","process","onload","getContext","vertexShader","VERTEX_SHADER","vertexShaderSource","fragmentShader","FRAGMENT_SHADER","fragmentShaderSource","program","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","deleteProgram","useProgram","positionLocation","getAttribLocation","texcoordLocation","kernelLocation","getUniformLocation","kernelWeightLocation","textureSizeLocation","uniform2f","width","height","useKernel","uniform1fv","uniform1f","kernel","weight","reduce","prev","curr","computeKernelWeight","positionBuffer","createBuffer","bindBuffer","ARRAY_BUFFER","x","y","x1","x2","y1","y2","bufferData","Float32Array","STATIC_DRAW","setRectangle","texcoordBuffer","coordB","coordC","concat","texture","createTexture","bindTexture","TEXTURE_2D","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MIN_FILTER","NEAREST","TEXTURE_MAG_FILTER","texImage2D","RGBA","UNSIGNED_BYTE","resolutionLocation","viewport","clearColor","clear","COLOR_BUFFER_BIT","enableVertexAttribArray","FLOAT","vertexAttribPointer","primitiveType","TRIANGLES","drawArrays","render","WebGl","react_default","a","createElement","App_WebGlCanvas","initcanvas","Component","WebGlCanvas","this","props","style","border","ref","id","_THREEID","containerEl","scene","THREE","camera","renderer","domElement","className","shadowMapEnabled","setSize","getElementsByClassName","length","appendChild","cube","geometry","material","color","opacity","transparent","wireframe","castShadow","position","drawCube","axes","add","planeGeometry","planeMaterial","plane","rotation","Math","PI","z","set","receiveShadow","drawPlane","spotLight","shadow","mapSize","drawLight","lookAt","i","animate","requestAnimationFrame","sin","abs","A","el","renderThree","TransitionRoutes","withRouter","_react_transition_group_2_5_3_react_transition_group","timeout","enter","exit","key","location","pathname","classNames","enterActive","exitActive","Switch","children","Routes","routes_TransitionRoutes","Route","path","component","Gl","Three","Boolean","window","hostname","match","ReactDOM","BrowserRouter","Link","to","routes_Routes","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.fb9e9fc7.chunk.js","sourcesContent":["module.exports = \"attribute vec2 a_position;\\nattribute vec2 a_texCoord;\\n\\nuniform vec2 u_resolution;\\n\\nvarying vec2 v_texCoord;\\n\\nvoid main() {\\n   // convert the rectangle from pixels to 0.0 to 1.0\\n   vec2 zeroToOne = a_position / u_resolution;\\n\\n   // convert from 0->1 to 0->2\\n   vec2 zeroToTwo = zeroToOne * 2.0;\\n\\n   // convert from 0->2 to -1->+1 (clipspace)\\n   vec2 clipSpace = zeroToTwo - 1.0;\\n\\n   gl_Position = vec4(clipSpace * vec2(1, -1), 0, 1);\\n\\n   // pass the texCoord to the fragment shader\\n   // The GPU will interpolate this value between points.\\n   v_texCoord = a_texCoord;\\n}\\n\"","module.exports = \"precision mediump float;\\n// 纹理\\nuniform sampler2D u_image;\\nuniform vec2 u_textureSize;\\nuniform float u_kernel[9];\\nuniform float u_kernelWeight;\\n\\n// 从顶点着色器传入的纹理坐标\\nvarying vec2 v_texCoord;\\n \\nvoid main() {\\n   // 在纹理上寻找对应颜色值\\n  vec2 onePixel = vec2(1.0, 1.0) / u_textureSize;\\n  vec4 colorSum = texture2D(u_image, v_texCoord + onePixel * vec2(-1, -1)) * u_kernel[0] +\\n    texture2D(u_image, v_texCoord + onePixel * vec2(0, -1)) * u_kernel[1] +\\n    texture2D(u_image, v_texCoord + onePixel * vec2(1, -1)) * u_kernel[2] +\\n    texture2D(u_image, v_texCoord + onePixel * vec2(-1, 0)) * u_kernel[3] +\\n    texture2D(u_image, v_texCoord + onePixel * vec2(0, 0)) * u_kernel[4] +\\n    texture2D(u_image, v_texCoord + onePixel * vec2(-1, 1)) * u_kernel[5] +\\n    texture2D(u_image, v_texCoord + onePixel * vec2(0, 1)) * u_kernel[6] +\\n    texture2D(u_image, v_texCoord + onePixel * vec2(1, 1)) * u_kernel[7];\\n    \\n  gl_FragColor = vec4((colorSum / u_kernelWeight).rgb, 1.0);\\n}\"","\n// 创建着色器方法，输入参数：渲染上下文，着色器类型，数据源\nexport function createShader(gl, type, source) {\n  var shader = gl.createShader(type); // 创建着色器对象\n  gl.shaderSource(shader, source); // 提供数据源\n  gl.compileShader(shader); // 编译 -> 生成着色器\n  var success = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\n  if (success) {\n    return shader;\n  }\n \n  console.log(gl.getShaderInfoLog(shader));\n  gl.deleteShader(shader);\n}\n\nexport function createProgram(gl, vertexShader, fragmentShader) {\n  var program = gl.createProgram();\n  gl.attachShader(program, vertexShader);\n  gl.attachShader(program, fragmentShader);\n  gl.linkProgram(program);\n  var success = gl.getProgramParameter(program, gl.LINK_STATUS);\n  if (success) {\n    return program;\n  }\n \n  console.log(gl.getProgramInfoLog(program));\n  gl.deleteProgram(program);\n}","import { createProgram, createShader } from '../common.js';\nimport vertexShaderSource from './vertex.glsl';\nimport fragmentShaderSource from './fragment.glsl';\n\nconst KERNELS = {\n  edgeDetectKernel: [\n    -1, -1, -1,\n    -1, 8, -1,\n    -1, -1, -1,\n  ],\n  guassianBlur: [\n    1, 2, 1,\n    2, 4, 2,\n    1, 2, 1\n  ],\n  normal: [\n    0,0,0,\n    0,1,0,\n    0,0,0,\n  ]\n\n}\n\nexport default function c(canvas) {\n  var image = new Image();\n  image.src = process.env.PUBLIC_URL + \"/leaves.jpg\";\n  image.onload = function() {\n    render(canvas, image);\n  };\n}\n\nfunction computeKernelWeight(kernel) {\n  const weight = kernel.reduce(function(prev, curr) {\n    return prev + curr;\n  }, 0);\n  return weight <= 0 ? 1 : weight;\n}\n\nexport function render(canvas, image) {\n  const gl = canvas.getContext('webgl');\n  const vertexShader = createShader(gl, gl.VERTEX_SHADER, vertexShaderSource);\n  const fragmentShader = createShader(gl, gl.FRAGMENT_SHADER, fragmentShaderSource);\n  var program = createProgram(gl, vertexShader, fragmentShader);\n  gl.useProgram(program);\n\n  const positionLocation = gl.getAttribLocation(program, \"a_position\");\n  const texcoordLocation = gl.getAttribLocation(program, 'a_texCoord');\n  const kernelLocation = gl.getUniformLocation(program, 'u_kernel[0]');\n  const kernelWeightLocation = gl.getUniformLocation(program, 'u_kernelWeight');\n  const textureSizeLocation = gl.getUniformLocation(program, 'u_textureSize');\n\n  gl.uniform2f(textureSizeLocation, image.width, image.height);\n\n  \n  const useKernel = KERNELS.normal;\n  gl.uniform1fv(kernelLocation, useKernel);\n  gl.uniform1f(kernelWeightLocation, computeKernelWeight(useKernel));\n  var positionBuffer = gl.createBuffer();\n  gl.bindBuffer(gl.ARRAY_BUFFER, positionBuffer);\n  setRectangle(gl, 0, 0, image.width, image.height);\n\n  var texcoordBuffer = gl.createBuffer();\n  gl.bindBuffer(gl.ARRAY_BUFFER, texcoordBuffer);\n  const coordA = [0.0, 0.0];\n  const coordB = [1.0, 0.0];\n  const coordC = [0.0, 1.0];\n  const coordD = [1.0, 1.0];\n  gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([\n    ...coordA,\n    ...coordB,\n    ...coordC,\n    ...coordC,\n    ...coordB,\n    ...coordD\n  ]), gl.STATIC_DRAW);\n\n  var texture = gl.createTexture();\n  gl.bindTexture(gl.TEXTURE_2D, texture);\n\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n\n  gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, image);\n\n  var resolutionLocation = gl.getUniformLocation(program, \"u_resolution\");\n\n\n  gl.viewport(0, 0, gl.canvas.width, gl.canvas.height);\n\n  gl.clearColor(0, 0, 0, 0);\n  gl.clear(gl.COLOR_BUFFER_BIT);\n\n  gl.useProgram(program);\n\n  gl.enableVertexAttribArray(positionLocation);\n\n  gl.bindBuffer(gl.ARRAY_BUFFER, positionBuffer);\n\n  var size = 2;\n  var type = gl.FLOAT;\n  var normalize = false;\n  var stride = 0;\n  var offset = 0;\n  gl.vertexAttribPointer(\n      positionLocation, size, type, normalize, stride, offset);\n\n  gl.enableVertexAttribArray(texcoordLocation);\n\n  gl.bindBuffer(gl.ARRAY_BUFFER, texcoordBuffer);\n\n  gl.vertexAttribPointer(\n      texcoordLocation, size, type, normalize, stride, offset);\n\n  gl.uniform2f(resolutionLocation, gl.canvas.width, gl.canvas.height);\n\n  var primitiveType = gl.TRIANGLES;\n  var count = 6;\n  gl.drawArrays(primitiveType, 0, count);\n\n}\n\nfunction setRectangle(gl, x, y, width, height) {\n  var x1 = x;\n  var x2 = x + width;\n  var y1 = y;\n  var y2 = y + height;\n  gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([\n     x1, y1,\n     x2, y1,\n     x1, y2,\n     x1, y2,\n     x2, y1,\n     x2, y2,\n  ]), gl.STATIC_DRAW);\n}","import React, { Component } from 'react';\nimport c from './c2'\nexport default class WebGl extends Component {\n  render() {\n    return <div>\n      <WebGlCanvas initcanvas={c} />\n    </div>\n  }\n}\n\n\nclass WebGlCanvas extends Component {\n  render() {\n    const { initcanvas } = this.props;\n    return <div>\n      <canvas\n        style={{\n          border: '1px solid'\n        }}\n        ref={(c) => {\n          if (!c) return;\n          initcanvas(c);\n        }}\n        id=\"canvas-ex\"\n        width=\"400\"\n        height=\"400\"\n      >\n        canvas\n      </canvas>\n    </div>\n  }\n}\n","import * as THREE from 'three';\n\nconst _THREEID = '$three';\n\nexport default function render(containerEl) {\n  const scene = new THREE.Scene();\n  const camera = new THREE.PerspectiveCamera(60, 600 / 400, 0.1, 1000);\n  const renderer = new THREE.WebGLRenderer();\n  renderer.domElement.className = _THREEID;\n  renderer.shadowMapEnabled = true;\n  renderer.setSize(600, 400);\n  if (containerEl && !containerEl.getElementsByClassName(_THREEID).length) {\n    containerEl.appendChild(renderer.domElement);\n  }\n  const cube = drawCube();\n  const axes = new THREE.AxesHelper(20);\n  \n  scene.add(axes);\n  scene.add( cube );\n  scene.add(drawPlane());\n  scene.add(drawLight());\n  \n  camera.position.set(-30, 40, 30);\n  camera.lookAt(0,0,0)\n  let i = 0;\n  function animate() {\n    requestAnimationFrame( animate );\n    // cube.rotation.x += 0.001;\n    i += 0.01;\n    cube.rotation.z = i;\n    cube.rotation.y = Math.sin(-0.5 * Math.PI * i);\n    cube.material.opacity = Math.abs(Math.sin(Math.PI * i)) + 0.1;\n\n    renderer.render( scene, camera );\n  }\n  animate();\n}\n\nfunction drawLight() {\n  const spotLight = new THREE.SpotLight(0xffffff);\n  spotLight.position.set(0 ,100, 0);\n  spotLight.shadow.mapSize = new THREE.Vector2(1024 * 4, 1024 * 4);\n  spotLight.castShadow = true;\n  return spotLight;\n}\n\nfunction drawPlane() {\n  const planeGeometry = new THREE.PlaneGeometry(100, 100);\n  const planeMaterial = new THREE.MeshPhongMaterial({ color: 0xaaaaaa });\n  const plane = new THREE.Mesh(planeGeometry, planeMaterial);\n  plane.rotation.x = -0.5 * Math.PI;\n  plane.rotation.z = 0.1 * Math.PI;\n  plane.position.set(0, 0 , 0);\n  plane.receiveShadow = true;\n  return plane;\n}\n\nfunction drawCube() {\n  const geometry = new THREE.BoxGeometry( 10, 10, 10 );\n  const material = new THREE.MeshLambertMaterial( {\n    color: 0xff0000,\n    opacity: 0.5,\n    transparent: true,\n    wireframe: true\n  } );\n  const material2 = new THREE.MeshLambertMaterial({\n    wireframe: true,\n  });\n  // const cube =  THREE.SceneUtils.createMultiMaterialObject(geometry, [material, material2])\n  const cube = new THREE.Mesh( geometry, material );\n  cube.castShadow = true;\n  cube.position.y = 10;\n  return cube;\n}\n\nfunction drawLine() {\n  const geometry = new THREE.Geometry();\n  const material = new THREE.LineBasicMaterial({ color: 0x0000ff });\n  geometry.vertices.push(new THREE.Vector3(-10, 0, 0));\n  geometry.vertices.push(new THREE.Vector3(0, 10, 0));\n  geometry.vertices.push(new THREE.Vector3(10, 0, 0));\n  const line = new THREE.Line(geometry, material);\n  return line;\n}","import React, { Component } from 'react';\nimport renderThree from './demo2';\n\nexport default class A extends Component {\n  render() {\n    return <div\n      ref={(el) => {\n        if(el) {\n          renderThree(el);\n        }\n      }}\n    ></div>;\n  }\n}","import React, { Component } from 'react';\nimport { Route, Switch } from 'react-router-dom'\nimport { withRouter } from 'react-router'\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\n// import TransitionEx, { CssTransitionHOC } from 'components/common/react_transition';\n\nimport Gl from './gl/App';\nimport Three from './three';\n\n@withRouter\nclass TransitionRoutes extends Component {\n  render() {\n    return <TransitionGroup\n      style={{\n        position: 'relative'\n      }}\n    >\n      <CSSTransition\n        timeout={{\n          enter: 800,\n          exit: 200,\n        }}\n        key={this.props.location.pathname}\n        classNames={{\n          enter: 'fadeIn',\n          enterActive: 'animated',\n          exit: 'fadeOut',\n          exitActive: 'animated',\n        }}\n      >\n        <div\n          style={{\n            position: 'absolute',\n            width: '100%'\n          }}\n        >\n          <Switch\n            location={this.props.location}\n          >\n           {\n             this.props.children\n           } \n          </Switch>\n        </div>\n      </CSSTransition>\n    </TransitionGroup>\n  }\n}\nexport default class Routes extends Component {\n  render() {\n    return <TransitionRoutes>\n      <Route path=\"/gl\" component={Gl} />\n      <Route path=\"/three\" component={Three} />\n    </TransitionRoutes>;\n  }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router, Link } from 'react-router-dom';\nimport App from './gl/App';\nimport Routes from './routes';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Router>\n  <div>\n\n  <Link to=\"/gl\">gl</Link>\n  <Link to=\"/three\">three</Link>,\n    <Routes />\n  </div>\n  </Router>\n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}